# 数据类型
# 整数/浮点数/字符串/布尔值/空值/变量/常量/列表/元组

# 整数
print('整数', 1, -800, 1.23e3, 1324.e2, 0, +0, -0.0, -1.0)

# 浮点数
"""
浮点数也就是小数，之所以称为浮点数，
是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的
"""
print('浮点数', 1.22, 1.234e1, 1.e-2, 3.1415926, -1.2)
print(1.e-6)
'''
整数和浮点数在计算机内部存储的方式是不同的，
整数运算永远是精确的（除法难道也是精确的？是的！），
而浮点数运算则可能会有四舍五入的误差。
'''
# 字符串
# 外双内单，外单内双，转义字符\,换行符\n,制表符\t,不转义任何字符r'',允许换行'''...'''
print('字符串', "I'm Tom", '123', 'abd', "I'm \"O K\"", 'K O')
print('不转义任何字符', r'\n\\\12')
print('允许换行', '''
我
...换行了''')
print('多行字符串换行', r'''hello,\n
world''')

# 布尔值
# True  False 布尔值可以用and or not 运算
print('布尔值', True, False)
print(True and True)  # True
print(False and True)  # False
print(5 > 2 and True)  # True
print(not True)  # False
print(not 1 > 2)  # True

# 空值
# None 不能理解为0，因为0是由意义的，None是特殊的空值
print(None)

# 变量
a = 'ABC'
b = a
a = 'XYZ'
print('变量 a = ', a, '变量 b = ', b)

# 常量
# 整除/，地板除//（只取整数部分），取余除%
PI = 3.14159265359
print('常量', PI)
print(10 / 3)  # 3.3333333333333335
print(10 // 3)  # 3
print(10 % 3)  # 1
'''
事实上PI仍然是一个变量，Python根本没有任何机制保证PI不会被改变，
所以，用全部大写的变量名表示常量只是一个习惯上的用法，
'''

# 小总结：Python 是动态类型语言，与之对应是静态类型语言，比如 Java，Java在生明变量时就要定义好类型，不能更改类型
# 注意：Python 的整数是没有大小限制的，其他语言会有大小限制，如Java 对32位整数的范围限制在-2147483648 - 2147483647
# Python 的浮点数也没有大小限制，但是超出一定范围就直接表示为inf(无限大)